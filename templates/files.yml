# You can add your own environments below.  Requirements listed in
# the 'global' environment are always checked

# Each environt takes an array of strings or hashes(source,target,md5)
# source is where it can be found
# target is where it should be
# md5 is the md5 the 'target' copy should hash to, this is optional and used by IntegrityResolver
#      - /etc/nginx/nginx.conf
#      - { target: "./public/this.txt", source: "http://example.com/index.html"}
#      - { target: "file:///tmp/somefile.txt", source: "~/.secret/file.txt"}

# The IntegrityResolver piggybacks on the FileResolver.  And MD5 or SHA1 hash can be specified
# - {target: "/path/to/file.txt", md5: "MY_MD5"}
# - {target: "/path/to/file.txt", sha1: "MY_SHA1"}

# The PermissionResolver piggybacks on the FileResolver, SymlinkResolver and DirectoryResolver.
#  Each of the config files associated with those resolvers can include the following
#  options in their hash to be parsed by the permission resolver.  So you will not generally have a 'permission.yml' file.
#  Instead these options should be specified on a file in files.yml directories.yml or symlinks.yml

# Each environt takes an array hashes
# @param target [String] REQUIRED
#     the path to check permissions
#
# @param mode [String] OPTIONAL;
#     MOde of file 0777, 0755, etc
#
# @param user [String|Integer] OPTIONAL;
#     User that should own resource (name or ID)
#
# @param group [STring|Integer] OPTIONAL;
#     Group that should own resource (name or ID)
#
# You can additionally set permissions like:
# - { target: "file:///tmp/somefile.txt", source: "~/.secret/file.txt", mode: "777", user: "www-data", group: "www-data"}

---
- :branch: file
  :environments: 
    :development:
      - { target: "http://example.com/tmp/somefile.txt", source: "~/.secret/file.txt", mode: "777", user: "www-data", group: "www-data", sha1: "picklepastaarmymassacre"}
    :global: []
    :test: []
    :qa: []
    :production: []